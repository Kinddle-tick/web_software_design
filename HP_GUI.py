# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'd:\learn\Internet Application Design code\example\textlinePic.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

# from _typeshed import Self
import datetime
import sys
from typing import FrozenSet
from PyQt5 import QtCore, QtGui, QtWidgets
#loc 参数
# BROWSERLEFT = 100
# BROWSERRIGHT = 99

class MainWindow(QtWidgets.QWidget):
    def __init__(self, ip=None, port=None):
        super(MainWindow, self).__init__()
        self.setupMainWindow(self)

    def setupMainWindow(self,Form):
        Form.setObjectName("Form")
        Form.resize(800, 600)
        self.ChatWindow = ChatWindow(self)
        # self.ChatWindow.show()
        self.ChatWindow.setGeometry(28, 40, 661, 271)
        self.textEdit = myLineEdit(self)
        # self.textEdit = QtWidgets.QTextEdit(Form)
        self.textEdit.setGeometry(QtCore.QRect(28, 330, 661, 251))
        self.textEdit.setObjectName("textEdit")
        # self.textEdit.textChanged.connect(self.getFileLoc)
        
        self.sendButton = QtWidgets.QPushButton("发送",Form)
        self.sendButton.setGeometry(QtCore.QRect(700, 550, 50, 20))
        self.sendButton.setObjectName("sendFunc")
        self.sendButton.setShortcut('enter+shift')
        self.sendButton.clicked.connect(self.sendFunc)

        self.clearButton = QtWidgets.QPushButton("清空",Form)
        self.clearButton.setGeometry(QtCore.QRect(700, 520, 50, 20))
        self.clearButton.clicked.connect(self.clearTextLine)

        self.nameTextEdit = QtWidgets.QTextEdit(Form)
        self.nameTextEdit.setPlaceholderText("请输入用户名！")
        self.nameTextEdit.setGeometry(QtCore.QRect(28, 10, 120, 25))

        self.nameButtton = QtWidgets.QPushButton("确定",Form)
        self.nameButtton.setGeometry(QtCore.QRect(200, 10, 50, 20))
        self.nameButtton.clicked.connect(self.setName)

        self.welcomeLabel = QtWidgets.QLabel(Form)
        # self.welcomeLabel.setText("欢迎你：")
        self.welcomeLabel.setGeometry(QtCore.QRect(550, 10, 50, 40))

        self.nameLabel = QtWidgets.QLabel(Form)
        # self.nameLabel.setText("ppap")
        self.nameLabel.setGeometry(QtCore.QRect(610, 10, 50, 40))

    def setName(self):
        if(self.nameTextEdit.toPlainText()):
            userName = self.nameTextEdit.toPlainText()
        else:
            userName = "游客"
        
        self.welcomeLabel.setText("欢迎你：")
        self.nameLabel.setText(userName)

    def sendFunc(self):
        strdata = self.textEdit.toPlainText()
        print(strdata)
        curTime = str(datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S'))
        userName = self.nameLabel.text()
        data = '<div align="right" style="color: green">' + userName + " " + curTime + '</div>'+ \
            '<div align="right" style="font-size: 20px;font-weight: bolder">' + strdata + '</div>'
        #send by socket
        #code
        #####
        self.ChatWindow.wordShow(data=data,loc="R")
        self.textEdit.clear()
        self.recvFunc("nidaye")

    def recvFunc(self,recvMess:str):
        curTime = str(datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S'))
        userName = "hp1"
        data = '<div align="left" style="color: blue">' + userName + " " + curTime + '</div>'+ \
            '<div align="left" style="font-size: 20px;font-weight: bolder">' + recvMess + '</div>'
        
        self.ChatWindow.wordShow(data=data,loc="L")
    #这个是有名字的
    def recvFuncfromUser(self,recvMess:str,userName:str):
        curTime = str(datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S'))
        # userName = "hp1"
        data = '<div align="left" style="color: blue">' + userName + " " + curTime + '</div>'+ \
            '<div align="left" style="font-size: 20px;font-weight: bolder">' + recvMess + '</div>'
        
        self.ChatWindow.wordShow(data=data,loc="L")

    def clearTextLine(self):
        self.textEdit.clear()

class myLineEdit(QtWidgets.QTextEdit):
    def __init__(self,parent = None):
        super(myLineEdit,self).__init__(parent)
        self.setAcceptDrops(True) # 设置接受拖放动作


    def dragEnterEvent(self, e):
        # if e.mimeData().text().endswith(): 
        if e.mimeData().text():
            e.accept()
        else:
            e.ignore()

    def dropEvent(self, e): # 放下文件后的动作
        path = e.mimeData().text().replace('file:///', '') # 删除多余开头
        #path 就是文件路径 你可以在这里设置接口
        self.setText(path)

class ChatWindow(QtWidgets.QWidget):
    def __init__(self,parent=None):
        super(ChatWindow,self).__init__(parent)

        self.setObjectName("Form")
        # Form.resize(733, 597)
        self.setStyleSheet("border-color: rgb(255, 255, 255);\n"
                           "border-style: dotted;\n")
        self.textBrowserLeft = QtWidgets.QTextBrowser(self)
        # self.textBrowserOutput.setGeometry(QtCore.QRect(20, 20, 331, 261))
        self.textBrowserLeft.setObjectName("textBrowserOutput")
        self.textBrowserLeftScrollBar = self.textBrowserLeft.verticalScrollBar()
        self.textBrowserLeftScrollBar.valueChanged.connect(self.LeftSynCursor)

        self.textBrowserRight = QtWidgets.QTextBrowser(self)
        # self.textBrowserInput.setGeometry(QtCore.QRect(350, 20, 331, 261))
        self.textBrowserRight.setAutoFillBackground(False)
        self.textBrowserRight.setStyleSheet("border-color: rgb(255, 255, 255);\n"
                                            "gridline-color: rgb(255, 255, 255);")
        self.textBrowserRight.setObjectName("textBrowserInput")
        self.textBrowserRight.setAlignment(QtCore.Qt.AlignRight)
        self.textBrowserRightScrollBar = self.textBrowserRight.verticalScrollBar()
        self.textBrowserRightScrollBar.valueChanged.connect(self.RightSynCursor)

        layout = QtWidgets.QGridLayout()
        self.setLayout(layout)
        layout.setSpacing(0)
        layout.addWidget(self.textBrowserLeft, 1, 0, 1, 1)
        layout.addWidget(self.textBrowserRight, 1, 1, 1, 1)

    def setupUi(self,Form):
        pass


    def LeftSynCursor(self):
        scrollNum = self.textBrowserLeftScrollBar.value()
        self.textBrowserRightScrollBar.setValue(scrollNum)
    
    def RightSynCursor(self):
        scrollNum = self.textBrowserRightScrollBar.value()
        self.textBrowserLeftScrollBar.setValue(scrollNum)

    #在聊天框显示图片
    def PicFunc(self,src,loc:str):
        if loc.lower() in ["r", "right"]:
            #输入
            self.textBrowserRight.append('<img src="' + src + '"> height="200" width="200" ')#图片大小控制，没找到自适应的方案
            self.textBrowserLeft.append("\n")
        elif loc.lower() in ["l", "left"]:
            #接收别人的信息
            self.textBrowserLeft.append('<img src="' + src + '"> height="200" width="200"')
            self.textBrowserRight.append("\n")
        # self.textEdit.append('<img src="D:/learn/Internet Application Design code/example/pic.png">')
        
    #src是文件路径
    def addPictoInput(self,src):
        
        # self.textEdit.append('<img src="D:/learn/Internet Application Design code/example/pic.png">')
        self.textEdit.append('<img src="' + src + '"> height="200" width="200"' )

    def wordShow(self,data:str,loc):
        if loc.lower() in ["r", "right"]:
            #输入
            self.textBrowserRight.append(data)
            self.textBrowserLeft.append("\n")
        elif loc.lower() in ["l", "left"]:
            #接收别人的信息
            self.textBrowserLeft.append(data)
            self.textBrowserRight.append("\n")
    
    def clearBrowser(self):
        #清除掉输入输出框
        self.textBrowserRight.clear()
        self.textBrowserLeft.clear()




if __name__ == '__main__':
    app = QtWidgets.QApplication(sys.argv)
    test = ChatWindow()
    test.show()
    # test = ChatWindow()
    # test.show()
    # test.wordShow(data="nihao",loc=100)
    # test.wordShow(data="nihao",loc=99)
    # test.wordShowleft()
    sys.exit(app.exec_())
    

